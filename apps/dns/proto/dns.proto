syntax = "proto3";

package dns;

service DnsService {
  rpc AddHost(AddHostRequest) returns (AddHostResponse);
  rpc DeleteHost(DeleteHostRequest) returns (DeleteHostResponse);
  rpc EditUuid(EditUuidRequest) returns (EditResponse);
  rpc EditHostname(EditHostnameRequest) returns (EditResponse);
  rpc EditIp(EditIpRequest) returns (EditResponse);
  rpc GetUuidByHostname(GetUuidByHostnameRequest) returns (UuidResponse);
  rpc GetUuidByIp(GetUuidByIpRequest) returns (UuidResponse);
  rpc GetHostnameByUuid(GetHostnameByUuidRequest) returns (HostnameResponse);
  rpc GetHostnameByIp(GetHostnameByIpRequest) returns (HostnameResponse);
  rpc GetIpByUuid(GetIpByUuidRequest) returns (IpResponse);
  rpc GetIpByHostname(GetIpByHostnameRequest) returns (IpResponse);
}

message AddHostRequest {
  string hostname = 1;
  string ip = 2;
}

message AddHostResponse {
  string id = 1;
}

message DeleteHostRequest {
  string id = 1;
}

message DeleteHostResponse {
  bool success = 1;
}

message EditUuidRequest {
  string id = 1;
  string new_id = 2;
}

message EditHostnameRequest {
  string id = 1;
  string new_hostname = 2;
}

message EditIpRequest {
  string id = 1;
  string new_ip = 2;
}

message EditResponse {
  bool success = 1;
}

message GetUuidByHostnameRequest {
  string hostname = 1;
}

message GetUuidByIpRequest {
  string ip = 1;
}

message GetHostnameByUuidRequest {
  string id = 1;
}

message GetHostnameByIpRequest {
  string ip = 1;
}

message GetIpByUuidRequest {
  string id = 1;
}

message GetIpByHostnameRequest {
  string hostname = 1;
}

message UuidResponse {
  string id = 1;
}

message HostnameResponse {
  string hostname = 1;
}

message IpResponse {
  string ip = 1;
}